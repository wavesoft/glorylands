
     Database
 ================

 [Χ] Σπασιμο του instance σε per-type instance 
	+ Επιτάχυνση τις διαδικασίας αναζήτησης μιας και αναζητά σε λιγότερα και πιό
	  συγκεκριμένα αποτελέσματα
	+ Δυνατότητα αναζήτησης με όλα τα (δυναμικά) πεδία του κάθε πίνακα
	+ Επιτάχυνση της διαδικασίας διοτι δέν απαιτείται string parsing των δυναμικών πεδίων
	- Νέες actions θα πρέπει να τροποποιούν τη δομή του πίνακα για να προσθέσουν μεταβλητές

 [Χ] Εύρεση ενός τύπου GUID που να περιέχει στον κωδικό τον τύπο του instance, ωστε να
     επιλέγεται άμεσα το instance και οι λοιπές πληροφορίες απο τον αντίστοιχο τύπο
	+ ’μεσος εντοπισμός του πίνακα στον οποίο βρήσκονται καταχωρημένες οι πληροφορίες για
	  το Instance

 (1) Πρόταση: (HEX) FFFFFF-FF => GUID έως 16777215 instances
                              => ID   έως 256 τύπους
	+ Χωράει γρήγορα σε ένα int
	+ Αναλύεται γρήγορα με 2 διαιρέσεις
	- Απαιτεί λεξικό αντιστοίχησης id σε όνομα τύπου

 (2) Πρόταση: (STR) {type}{Number} (unit1293) => GUID Απεριόριστο INT
                                              => ID   Απεριόριστο String
	+ Δέν απαιτεί λεξικό αντιστοίχησης id σε όνομα τύπου
	+ fixed-sized ονόματα αναλύονται γρήγορα, dynamic ονόματα έχουν καθυστέρηση
	- Αυξημένη πιθανότητα hacking vulnerability
	- Μεγαλύτερες αποθηκευτικές απαιτήσεις
	
  >> Καταλήγουμε στο εξής:
  	 
	 Το GUID είναι ένας αριθμός. Του οποίου το low-order byte είναι αυτό το οποίο δηλώνει τον
	 τύπο τους, και τα υπόλοιπα byte το index του. Επιπλέον, το πρώτο bit του πρώτου byte δηλώνει
	 άν το GUID αναφέρεται σε Instance ή σε Template. Έτσι:
	 
		 	 	        xxxxxxxxxxxxxxxxxxxxxxxx    nnnnnnn       T
							24 bit = 16777216     7bit = 128 	1 = Instance
								(Item Index)	  (Category)	0 = Template

 [ ] Σπάσιμο του interface σε menu modules

