
Επεξήγηση πεδίων απο τους πίνακες:


   Instance (OLD) 
 ===================
 
 Πίνακας αποθήκευσης κατάστασης instance όλων των αντικειμένων στο παιχνίδι (Παικτών, Unit, NPC, Items, Actions κλπ).

 * guid 	= Το μοναδικό ID του instance
 * parent	= Το μητρικό instance στο οποίο βρίσκεται (πχ. Το instance κάποιας τσάντας ή του παίκτη)
 * type		= Τύπος δεδομένων του instance. Αντικειμενικά είναι το prefix του ονόματος
		  ενός πίνακα στατικών δεδομένων. Παράδειγμα:
		
		-- item		= Το instance είναι item. Δεδομένα απο: item_template
		-- unit		= Το instance είναι unit. Δεδομένα απο: unit_template
		-- player	= Το instance είναι item. Δεδομένα απο: player_template
		... κλπ ....

 * template	= Το template id του διασυνδεδεμένου πίνακα στατικών δεδομένων
 * data		= Url-Encoded δεδομένα με τις μεταβλητές του instance (Δεδομένα στα οποία
		  δέν απαιτείται αναζήτηση)
 * index_1~4	= Δεδομένα Integer indexing που απαιτούνται για SQL αναζήτηση. Παράδειγμα η θέση Χ,Υ και ο χάρτης
 * index_5~6	= Δεδομένα String indexing.
 * flags	= Συγκεκριμένα χαρακτηρηστικά που έχει το instance και βοηθούν στην αναζήτηση

  instance_indexdef (OLD) 
 =========================
 
 Πίνακας αντιστοίχισης ονομάτων με τα πεδία index_1~4 του πίνακα instance για λόγους ευκολίας σχεδίαςσης
 και μεταφερσιμότητας κώδικα.

 * type		= Ο τύπος, για τον οποίο ζητείται η επεξήγηση των μεταβλητών
 * index_1~6	= Το όνομα των index. Μεταβλητές που δηλώνονται κατα τη δημιουργία με αυτό το όνομα
		  μεταφράζονται στο αντίστοιχο index, και αντίστροφα, κατα την ανάγνωση το index 
		  μεταφράζεται σε όνομα μεταβλητής.
 * notes	= Σχόλια εύρους τιμών και πληροφορίες επι των δεδομένων, για τους προγραμματιστές

  <type>_template
 ===================

 Αυτοί οι πίνακες περιέχουν τα στατικά δεδομένα χαρακτηρισμού των instance. Για παράδειγμα, εδώ βρίσκονται
 τα στοιχεία που αφορούν την επεξήγηση, το όνομα, το εικονίδιο, το script κλπ. των items, ενώ στον 
 πίνακα instance μεταφέρονται τα δεδομένα που αφορούν τον κατασκευαστή, τη ζημιά, κλπ... δηλαδή στοιχεία
 τα οποία μπορεί να αλλάζουν μεταξύ ιδίων αντικειμένων.

 * template	= Το ID με το οποίο συνδέεται ο πίνακας instance
 * scema	= Τα βασικά δεδομένα τα οποία αντιγράφονται αυτούσια στο πεδίο data του instance κατα τη
		  	  δημιουργία μιας νέας υπόστασης
 * <Μεταβλητές>	= Όλα τα υπόλοιπα πεδία είναι στατικές μεταβλητές και χρησιμοποιούνται απο της ενέργειες
		  που τα χρειρίζονται.

  data_instancing
 =================

 Αυτοός ο πίνακας περιέχει τα instance που θα πρέπει να δημιουργηθούν για να υποστηρίξουν το instance 
 κάποιου τύπου κατα τη δημιουργία του. Για παράδειγμα, όταν δημιουργείται ένας vendor, θα πρέπει να γεμίσει
 items. Ή όταν δημιουργείται ένας παίκτης, θα πρέπει να πάρει τα default items, spells, κλπ.

 * index		= Αύξων αριθμός - Χρήση indexing
 * template		= Ο κωδικός του template, του οποίου τα instances πρέπει να αρχικοποιηθούνε
 * parent		= Ο κωδικός (index) κάποιου αντικειμένου που εισήχθηκε προηγουμένως, στο οποίο 
			  χρειάζεται το instance αυτό να γίνει υποαντικείμενο
 * item_type		= Ο τύπος του instance που θα πρέπει να μπεί
 * item_template	= Το template ID του instance που θα πρέπει να μπεί
 * item_count		= Πόσες φορές θα μπεί το ίδιο item
 * item_variables	= URL-Encoded μεταβλητές που θα αρχικοποιήσουν το νέο item
 * item_customvars  = Ονόματα μεταβλητών διαχωρισμένα με ',', υποδηλώνοντας οτι σε αυτή την εγγραφή,
 					  οι συγκεκριμένες μεταβλητές θα καθορίζονται όταν δημιουργείται το item
 
 Όλα τα items που θα δημιουργηθούν θα έχουν parent το αρχικό instance ή το αντίστοιχο sub-instance.

  <type>_vardesc
 ===================

 Αυτοί οι πίνακες περιέχουν τα δεδομένα μετάφρασης ονομάτων μεταβλητών σε εμφανίσημα, user-friendly αποτελέσματα για χρήση
 στα παράθυρα πληροφοριών.
 
 * variable		= Το όνομα της μεταβλητής (index)
 * name			= Το πραγματικό όνομα της μεταβλητής
 * level		= Το επίπεδο λεπτομέριας στο οποίο εμφανίζεται η μεταβλητή. Για παράδειγμα:
 				  0: Ποτέ, 1: Βασική επεξήγηση, 2: Λεπτομερής επεξήγηση, 3: Debug

 * showmissing	= Εμφάνιση ακόμα και άν λείπει η μεταβλητή
 * default		= Προεπιλεγμένη τιμή όταν λείπει η μεταβλητή ή είναι κενή
 * mode			= Τύπος μεταβλητής:
 
		-- RAW		= Τα αποτελέσματα εμφανίζονται όπως είναι και στη μεταβλητή
		-- ALIAS	= Η μεταβλητή αποτελεί τιμή λίστας 
		-- SCRIPT	= Τα δεδομένα translation είναι κώδικας ο οποίος εκτελείται με eval και το αποτέλεσμα 
					  επιστρέφεται σάν τιμή της μεταβλητής προς εμφάνιση. Η μεταβλητή $var περιέχει την αρχική
					  τιμή της μεταβλητής
		-- GUID		= Η μεταβλητή είναι GUID. Κατα τη μετάφρασή της, εμφανίζεται ο υπερσύνδεσμος για τις πληροφορίες
					  προς το αντίστοιχο αντικείμενο
		-- ΜΟΝΕΥ	= H μεταβλητή είναι χρήματα. Κατα τη μετάφρασή της, αναλύεται σε gold/silver/copper
		-- QUERY	= Η μεταβλητή προκύπτει απο εκτέλεση query στην SQL. Το αποτέλεσμα πρέπει να είναι single-value.
					  
		
 * translation	= Δεδομένα μετάφρασης. Εξαρτάται απο την τιμή της mode:
 
 		-- ALIAS	= Λίστα με το σε τί αντιστοιχεί η κάθε τιμή της μεταβλητής, σε url-encoded format:
					  πχ: 1=unique&2=rare&3=epic ή OPEN=Ανοιχτό&CLOSED=Κλειστό κλπ..
		-- SCRIPT	= Κώδικας PHP του οποίου το αποτέλεσμα (με return) εμφανίζεται ώς έξοδος. Η μεταβλητή εισόδου
					  δίδεται στη μεταβλητή $var
					  πχ: if ($var>10) { return "Μικρός"; } else { return "Μεγάλος"; }
		-- QUERY	= Ερώτημα SQL βάση του οποίου προκύπτει το αποτέλεσμα. Πάλι, η μεταβλητή είναι η $var:
					  πχ: SELECT `index_1` FROM `instance` WHERE `guid` = $var

  <type>_instance
 ===================
 
  Αυτοί οι πίνακες περιέχουν της πληροφορίες για όσα αντικείμενα του συγκεκριμένου τύπου έχουν δημιουργηθεί. Πλέον, βάση του
  GUID, είναι δυνατό να εντοπίζεται το όνομα του πίνακα που περιέχει τις πληροφορίες υπόστασης, οπότε αυτή η δομή προσθέτει
  τη δυνατότητα να μπορούν να γίνονται αναζητήσεις με βάση τις συγκεκριμένες per-type ιδιότητες.

  * index			= Αύξων αριθμός  
  * guid			= Το instance guid του αντικειμένου ( index + low-order byte)
  * data			= serialized λοιπά δεδομένα
  * template		= Ο κωδικός του template απο το οποίο προέρχεται
  * <Indexes>		= Τα λοιπά πεδία χρησιμοποιούνται για indexing

    system_files
 ===================
	
 Περιέχει τα αρχεία που έχουν εγκατασταθεί απο συγκεκριμένα πακέτα. Απαιτείται για την απεγκατάσταση/εγκατάσταση
 τμημάτων του παιχνιδιού.
 
 * index			= Ο αύξων αριθμός του αρχείου
 * type				= Ο τύπος του πακέτου (προσδιορίζει το BasePath και τα προνόμια εγγραφής)
 * package			= Το πακέτο στο οποίο ανήκει
 * filename			= Η θέση του αρχείου (και σε relative path εάν βρίσκεται σε υποφάκελο)
 * version			= Η έκδοση του αρχείου
 * hash				= To MD5 hash του αρχείου που προκύπτει κατα την εγκατάστασή του, για να εντοπίζονται αλλαγές
  
  system_packages
 ===================
 
 Περιέχει τα πακέτα που έχουν εγκατασταθεί για το παιχνίδι. Τα αρχεία των κάθε πακέτων βρήσκονται στον πίκνακα system_files
 
 * index			= Ο αύξων αριθμός του πακέτου
 * guid				= Ένα πραγματικό, random GUID που καθορίζει παγκόσμια το πακέτο
 * type				= Ο τύπος του πακέτου (Αρχεία/Patch/Έγγραφα βοήθειας)
 * version			= Η έκδοση του πακέτου
 * name				-
 * description		-
 * author			- |= Πληροφορίες πακέτου
 * copyright		-
 * website			-
 * installdate		= UNIX Timestamp ώρας εγκατάστασης
 * require			= Comma-Separated List που περιέχει τα GUID των πακέτων απο τα οποία εξαρτάται αυτό το πακέτο
 * status			= Κατάσταση του πακέτου (Μπορεί να είναι προσωρινά απομακρυσμένο, ελλιπώς εγκατεστημένο ή να έχει προκαλέσει
 					  πρόβλημα στο παιχνίδι)
					  
  system_group_dictionary
 =========================
  
  Περιέχει τη λίστα με τις εγγραφές του λεξικού αντιστοίχησης GUID Type ID <-> Table Name. Τα περιεχόμενα αυτού του πίνακα
  εγγράφονται σε cache μετά απο κάποια εγκατάσταση
  
  * index			= GUID Type ID
  * name			= Table prefix (<name>_template, <name>_instance, <name>_vardesc)
  *	package			= Το ID του πακέτου απο το οποίο προήλθε


  system_packages_uninstall
 ===========================
 
  Περιέχει τις ενέργειες που θα εκτελεστούν κατα την απεγκατάσταση ενός πακέτου
  
  * index			= A/A
  * package			= Package ID
  * umode			= Τύπος ενέργειας
  					
						-- SQL		= Εκτέλεση αρχείου στην βάση δεδομένων
						-- SCRIPT	= Εκτέλεση του php

  * data			= Δεδομένα ενέργειας (συνήθως το μονοπάτι του αρχείου)
  
  data_map_gameobjects
 ======================
 
  Περιέχει όλα τα αντικείμενα τα οποία πρόκειτε να εμφανιστούν πάνω στον χάρτη
  
  * index			= A/A
  * x,y,map			= Προσδιορισμός Θέσης αντικειμένου
  * guid			= Το GUID (άν υπάρχει) του αντικειμένου με το οποίο συνδέεται το
  					  αντικείμενο πάνω στον χάρτη
  * model			= Όνομα του μοντέλου που θα φορτωθεί για να εμφανιστεί
  * type			= Τύπος αντικειμένου. Μπορεί να είναι:
  						
						-- 
							
  * scheduler_script  Αρχείο το οποίο θα εκτελεστεί και πρέπεει να επιστρέψει true προκειμένου να
  					  εμφανιστεί το αντικείμενο στον χάρτη
  * interface		= Interface με το οποίο είναι συνδεδεμένο το αντικείμενο. Αυτό το interface
  					  θα εμφανιστεί είτε σε παράθυρο είτε σε 
 
  data_maps_teleports
 =====================

  Περιέχει όλες τις συντεταγμένες για τηλεμεταφορά του χρήστη απο έναν χάρτη ή ένα σημείο σε άλλο.
  
  * index			= A/A
  * x,y,map			= Θέση σημείου τηλεμεταφοράς
  * to_x,to_y,		= Κατεύθυνση σημείου τηλεμεταφοράς
    to_map
  * locks			= Απαιτήσεις μεταβλητών χρήστη
  * modifiers		= Τροποποιήσεις που επιφέρει η τηλεμεταφορά στις μεταβλητές του χρήστη
  * message			= Μήνυμα που θα εμφανιστεί στον χρήστη
  
  data_locks
 ============
 
  Περιέχει την πλήρη λίστα όλων των πιθανών απαιτήσεων μεταβλητών του χρήστη
  
  * index			= A/A
  * lockid			= Κωδικός της ομάδας απαιτήσεων
  * require			= Όνομα απαιτούμενης μεταβλητής
  * modifier		= Τύπος σύγκρισης
  * value			= Τιμή μεταβλητής
  * failmessage		= Μήνυμα που θα εμφανιστεί εάν η σύγκριση αποτύχει
  
  data_affects
 ==============
 
  Περιέχει την πλήρη λίστα όλων των μεταβολών στις μεταβλητές του χρήστη
  
  * index			= A/A
  * affectid		= Κωδικός της ομάδας μεταβολών
  * variable		= Όνομα μεταβαλλόμενης μεταβλητής
  * modifier		= Τύπος μεταβολής
  * value			= Τιμή μεταβολής
  * timeout			= Διάρκεια μεταβολής (0=Για πάντα)
